@page "/counter"
@using Domain.Interface
@rendermode InteractiveServer
@inject IRepositoryAsync<Post> PostRepositoryAsync
@inject IRepositoryAsync<User> UserRepositoryAsync

<PageTitle>Create Post</PageTitle>

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card shadow-sm">
                <div class="card-header bg-primary text-white">
                    <h3 class="mb-0">Create a New Post</h3>
                </div>
                <div class="card-body">
                    <EditForm Model="_newPost" OnSubmit="CreatePost">
                        <div class="mb-3">
                            <label class="form-label">Text</label>
                            <input type="text" class="form-control" @bind="_newPost.Text" placeholder="Enter your post text">
                        </div>

                        <div class="mb-3">
                            <label class="form-label">User ID</label>
                            <input type="number" class="form-control" @bind="_newPost.UserId">
                        </div>

                        <div class="mb-3">
                            <label class="form-label">Created At</label>
                            <input type="datetime-local" class="form-control" @bind="_newPost.CreatedAt">
                        </div>

                        <div class="text-end">
                            <button type="submit" class="btn btn-primary">
                                <i class="bi bi-plus-circle"></i> Add Post
                            </button>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private Post _newPost = new Post();

    protected async override Task OnInitializedAsync()
    {
        _newPost.CreatedAt = DateTime.Now;
    }

    protected async Task CreatePost()
    {
        await PostRepositoryAsync.CreateAsync(_newPost);
    }
}
